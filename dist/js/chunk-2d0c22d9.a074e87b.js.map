{"version":3,"sources":["webpack:///./src/views/survey/SurveyResponse.vue","webpack:///./src/views/survey/SurveyResponse.vue?0dfe"],"names":["class","style","survey","name","description","topicNumber","totalTopics","value","progressBarValue","currentTopic","questions","question","key","id","answer","answers","checkanswerrequired","checkAnswerRequired","updateAnswer","$event","completed","label","disabled","previousTopic","saveSurvey","nextTopic","finishSurvey","components","SurveyQuestion","ProgressBar","data","currentanswer","computed","this","topics","sub_topics","topic","length","surveyResponse","question_responses","forEach","direct_indicator_id","created","initialize","methods","fetchSurvey","mId","method","fetchSurveyResponses","sId","OiD","$route","params","OrganisationId","query","console","log","surveyResponses","setSurveyResponse","createSurveyResponse","progress","pageturn","interval","updateSurveyResponse","$router","push","finished","surveyId","render"],"mappings":"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","file":"js/chunk-2d0c22d9.a074e87b.js","sourcesContent":["<template>\r\n<div class=\"p-d-flex p-grid p-jc-center p-m-0\">\r\n    <div class=\"p-col-12 p-p-3\" style=\"background-color: #dcedc8;\">\r\n        <h1>{{survey.name}}</h1>\r\n        <h3>{{survey.description}}</h3>\r\n    </div>\r\n    <div class=\"p-grid p-col-6 p-p-3\" style=\"background-color: white; border-radius: 10px;\">\r\n        <div class=\"p-col-6 p-text-left\">Topic {{ topicNumber + 1}} of {{totalTopics}}</div>\r\n        <div class=\"p-col-6 p-text-right\"><ProgressBar :value=\"progressBarValue\">{{progressBarValue}}% completed</ProgressBar></div>\r\n        <div class=\"p-col-12 p-text-left\"><h3>Topic: '{{currentTopic.name}}'</h3></div>\r\n        <survey-question class=\"p-col-12\"\r\n        v-for=\"question in currentTopic.questions\"\r\n        :key=\"question.id\"\r\n        :question=\"question\"\r\n        :answer=\"answers[question.id]\"\r\n        :checkanswerrequired=\"checkAnswerRequired\"\r\n        @input=\"updateAnswer(question.id, $event)\"\r\n        @completed=\"completed\"\r\n        />\r\n\r\n    <div class=\"p-col-6 p-text-left\">\r\n        <Button label=\"Previous Topic\" class=\"p-button-raised p-button-sm\" :disabled=\"topicNumber === 0\" @click=\"previousTopic\"/>\r\n    </div>\r\n    <div class=\"p-col-3 p-text-right\">\r\n        <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised p-button-sm\" @click=\"saveSurvey\" />\r\n    </div>\r\n    <div class=\"p-col-3 p-text-right\">\r\n        <Button v-if=\"topicNumber + 1 < totalTopics\" label=\"Next Topic\" class=\"p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"nextTopic\" />\r\n        <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"finishSurvey\" />\r\n    </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex'\r\nimport SurveyQuestion from '../../components/survey/SurveyQuestion'\r\nimport ProgressBar from 'primevue/progressbar'\r\n\r\nexport default {\r\n    components: {\r\n        SurveyQuestion,\r\n        ProgressBar\r\n    },\r\n    data () {\r\n        return {\r\n        topicNumber: 0,\r\n        progressBarValue: 0,\r\n        currentanswer: null,\r\n        checkAnswerRequired: false\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('method', ['method']),\r\n        ...mapState('survey', ['survey']),\r\n        ...mapState('surveyResponse', ['surveyResponses', 'surveyResponse']),\r\n        currentTopic () {\r\n            return this.survey?.topics[0].sub_topics[this.topicNumber]\r\n        },\r\n        totalTopics () {\r\n            let totalTopics = 0\r\n            for (const topic in this.survey?.topics) {\r\n                totalTopics = totalTopics + this.survey?.topics[topic].sub_topics.length\r\n            }\r\n            return totalTopics\r\n        },\r\n        answers () {\r\n            const answers = {}\r\n            if (this.surveyResponse?.id !== this.survey.id && this.surveyResponse.question_responses) {\r\n                this.surveyResponse.question_responses.forEach((answer) => {\r\n                    answers[answer.direct_indicator_id] = answer.value\r\n                })\r\n            }\r\n            return answers\r\n        }\r\n    },\r\n    created () {\r\n        this.initialize()\r\n    },\r\n    methods: {\r\n        ...mapActions('survey', ['fetchSurvey']),\r\n        ...mapActions('surveyResponse', ['fetchSurveyResponses', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse']),\r\n        async initialize () {\r\n            await this.fetchSurvey({ mId: this.method.id, id: this.survey.id })\r\n            await this.fetchSurveyResponses({ mId: this.method.id, sId: this.survey.id, OiD: this.$route.params.OrganisationId, query: `?organisation=${this.$route.params.OrganisationId}` })\r\n            console.log(this.surveyResponses)\r\n            if (this.surveyResponses.length) {\r\n                console.log('check')\r\n\t\t\t\tthis.setSurveyResponse(this.surveyResponses[0])\r\n\t\t\t\treturn\r\n            }\r\n            console.log('check')\r\n            this.createSurveyResponse({ mId: this.method.id, sId: this.survey.id, OrganisationId: this.$route.params.OrganisationId })\r\n        },\r\n        progress (pageturn) {\r\n            var interval = 100 / this.totalTopics\r\n            if (pageturn === 'back') {\r\n                this.progressBarValue -= interval\r\n            }\r\n            if (pageturn === 'next') {\r\n                this.progressBarValue += interval\r\n            }\r\n        },\r\n        previousTopic () {\r\n            if (this.topicNumber > 0) {\r\n                this.topicNumber -= 1\r\n                this.progress('back')\r\n            }\r\n        },\r\n        nextTopic () {\r\n            if (this.topicNumber + 1 < this.totalTopics) {\r\n                this.checkAnswerRequired = !this.checkAnswerRequired\r\n                this.topicNumber += 1\r\n                this.progress('next')\r\n            }\r\n        },\r\n        saveSurvey () {\r\n            this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n            this.$router.push({ name: 'organisationsurveys', params: { OrganisationId: this.$route.params.OrganisationId } })\r\n        },\r\n        finishSurvey () {\r\n            this.surveyResponse.finished = true\r\n            this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n            this.$router.push({ name: 'method-survey-result', params: { OrganisationId: this.$route.params.OrganisationId, id: this.method.id, surveyId: this.survey.id } })\r\n        },\r\n        updateAnswer (id, answer) {\r\n            this.currentanswer = answer\r\n            console.log(this.currentanswer)\r\n            this.updateSurveyResponse({\r\n                mId: this.method.id,\r\n                sId: this.survey.id,\r\n                surveyResponse: {\r\n                    ...this.surveyResponse,\r\n                    question_responses: [\r\n                        ...this.surveyResponse.question_responses,\r\n                        { direct_indicator_id: id, value: answer }\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        completed (completed) {\r\n            console.log('>>', completed)\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./SurveyResponse.vue?vue&type=template&id=58ee4e5e\"\nimport script from \"./SurveyResponse.vue?vue&type=script&lang=js\"\nexport * from \"./SurveyResponse.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}