{"version":3,"sources":["webpack:///./src/components/MyMethods.vue","webpack:///./src/components/MyMethods.vue?e1cd","webpack:///./src/views/method/Methods.vue","webpack:///./src/views/method/Methods.vue?f7fa"],"names":["class","style","left","label","icon","importDialog","networkMethods","addingProcess","initialize","confirmationDialog","disabled","selectedRows","length","selectionEnabled","selectionToggle","onLabel","offLabel","onIcon","offIcon","addableMethods","right","filters","placeholder","methods","ref","value","selection","selectionMode","dataKey","metaKeySelection","goToSelectedMethods","paginator","rows","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","columns","col","field","header","key","visible","modal","footer","addMethods","removeMethods","deleteMethods","item","name","customUpload","onUpload","fileLimit","accept","maxFileSize","empty","props","type","Array","default","Boolean","data","computed","created","this","console","log","fetchMethods","query","network","id","createMethod","event","patchNetwork","forEach","method","i","$toast","add","severity","summary","detail","life","deleteOrganisation","formData","FormData","append","files","Promise","resolve","reject","post","then","response","catch","err","setMethod","$router","push","params","render","goToMethodCreate","position","selection-enabled","components","MyMethods"],"mappings":"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","file":"js/chunk-3ef97c4f.51378984.js","sourcesContent":["<template>\r\n    <Toolbar>\r\n        <template #left>\r\n            <Button label=\"Create Method\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"importDialog = true\" />\r\n            <div v-if=\"networkMethods\">\r\n                <div v-if=\"!addingProcess\">\r\n                        <ToggleButton v-if=\"selectionEnabled\" v-model=\"selectionToggle\" onLabel=\"Selecting: Enabled\" offLabel=\"Selecting: Disabled\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" class=\"p-mr-2\" />\r\n                        <Button label=\"Add Methods\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"addableMethods()\" />\r\n                        <Button label=\"Remove Methods\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmationDialog = true\" :disabled=\"!selectedRows.length\" />\r\n                </div>\r\n                <div v-else>\r\n                    <Button label=\"Show network methods\" class=\"p-button-success p-mr-2\" @click=\"initialize()\" />\r\n                    <Button label=\"Add selected Methods\" class=\"p-button-primary p-mr-2\" @click=\"confirmationDialog = true\" :disabled=\"!selectedRows.length\" />\r\n                </div>\r\n            </div>\r\n        </template>\r\n\r\n        <template #right>\r\n            <span class=\"p-input-icon-left\">\r\n                <i class=\"pi pi-search\" />\r\n                <InputText v-model=\"filters['global']\" placeholder=\"Search...\" />\r\n            </span>\r\n        </template>\r\n    </Toolbar>\r\n    <div v-if=\"methods.length\">\r\n        <DataTable ref=\"dt\" :value=\"methods\" v-model:selection=\"selectedRows\" :selectionMode=\"selectionToggle? 'multiple' : 'single'\" dataKey=\"id\" :metaKeySelection=\"false\" @row-select=\"goToSelectedMethods\"\r\n            :paginator=\"true\" :rows=\"10\" :filters=\"filters\" paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n            :rowsPerPageOptions=\"[5,10,25]\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" class=\"p-datatable-striped\">\r\n\r\n            <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" />\r\n        </DataTable>\r\n    </div>\r\n    <div v-else class=\"p-p-3 p-text-bold\"> {{addingProcess? 'There are no methods to add, create one first!' : 'This network has no methods, add one!'}}</div>\r\n\r\n    <Dialog v-model:visible=\"confirmationDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\r\n      <div class=\"confirmation-content\">\r\n          <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\r\n            <span v-if=\"networkMethods\">Are you sure you want to <b>{{addingProcess? 'add' : 'remove'}}</b> the following methods?</span>\r\n            <span v-else>Are you sure you want to <b>delete</b> the following methods?</span>\r\n            <br>\r\n            <div class=\"p-shadow-2 p-m-3 p-p-3\">\r\n            <div v-for=\"item in selectedRows\" :key=item.name>{{item.name}}</div>\r\n            </div>\r\n      </div>\r\n      <template #footer>\r\n        <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"(confirmationDialog = false) && (selectedRows = [])\"/>\r\n        <Button v-if=\"networkMethods\" label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"addingProcess? addMethods() : removeMethods()\" />\r\n        <Button v-else label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteMethods()\" />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"importDialog\" :style=\"{width: '450px'}\" header=\"Import your Method\" :modal=\"true\" class=\"p-fluid\">\r\n        <FileUpload name=\"myfile\" :customUpload=\"true\" @uploader=\"onUpload\" :fileLimit=\"1\" accept=\".yaml\" :maxFileSize=\"1000000\">\r\n            <template #empty>\r\n                <p>Drag and drop your YAML file here to upload.</p>\r\n            </template>\r\n        </FileUpload>\r\n        <template #footer>\r\n            <Button label=\"Remove window\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"importDialog = false\"/>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\nimport { AxiosInstance } from '../plugins/axios'\r\nimport { mapActions, mapState } from 'vuex'\r\n\r\nexport default {\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            default: function () {\r\n                return [\r\n                    { field: 'name', header: 'Name' },\r\n                    { field: 'description', header: 'Description' },\r\n                    { field: '', header: '' }\r\n                ]\r\n            }\r\n        },\r\n        networkMethods: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        selectionEnabled: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            filters: {},\r\n            selectedRows: [],\r\n            selectionToggle: false,\r\n            addingProcess: false,\r\n            confirmationDialog: false,\r\n            importDialog: false\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('method', ['methods', 'method']),\r\n        ...mapState('network', ['network'])\r\n    },\r\n    created () {\r\n        this.initialize()\r\n    },\r\n    methods: {\r\n        ...mapActions('method', ['fetchMethods', 'setMethod', 'uploadMethod']),\r\n        ...mapActions('network', ['patchNetwork']),\r\n        async initialize () {\r\n            if (this.networkMethods) {\r\n                console.log('eee')\r\n                this.fetchMethods({ query: `?network=${this.network?.id || 0}` })\r\n            } else {\r\n                this.fetchMethods({})\r\n            }\r\n            this.selectedRows = []\r\n            this.confirmationDialog = false\r\n            this.addingProcess = false\r\n        },\r\n        createMethod (event) {\r\n            console.log('create method')\r\n        },\r\n        addableMethods () {\r\n            this.fetchMethods({ query: `?excludenetwork=${this.network?.id || 0}` })\r\n            this.addingProcess = true\r\n            this.selectionToggle = true\r\n        },\r\n        async addMethods () {\r\n            await this.patchNetwork(this.selectedRows)\r\n            this.initialize()\r\n        },\r\n\r\n        async removeMethods () {\r\n            await this.patchNetwork(this.selectedRows)\r\n            this.selectedRows.forEach((method, i) => {\r\n                this.$toast.add({ severity: 'success', summary: 'The following method was removed', detail: `${method.name}`, life: 3000 })\r\n            })\r\n            this.initialize()\r\n        },\r\n        async deleteMethods () {\r\n            await this.selectedRows.forEach((method, i) => {\r\n                this.deleteOrganisation({ id: method?.id || 0 })\r\n                this.$toast.add({ severity: 'success', summary: 'The following method was deleted', detail: `${method.name}`, life: 3000 })\r\n            })\r\n        },\r\n        async onUpload (event) {\r\n            // for (const file of event.files) {\r\n            //     console.log(file)\r\n            // }\r\n            var formData = new FormData()\r\n            formData.append('file', event.files[0])\r\n            return new Promise((resolve, reject) => {\r\n            AxiosInstance.post('/import-yaml/', formData)\r\n            .then(response => {\r\n                this.importDialog = false\r\n                this.$toast.add({ severity: 'success', summary: 'Method created', detail: 'New method', life: 3000 })\r\n                this.initialize()\r\n            resolve()\r\n            })\r\n            .catch(err => { reject(err) })\r\n            })\r\n        },\r\n        goToSelectedMethods (event) {\r\n            this.$toast.add({ severity: 'info', summary: 'Method Selected', detail: `${event.data.name}`, life: 3000 })\r\n            if (!this.selectionToggle) {\r\n                this.setMethod({ ...event.data })\r\n                this.$router.push({ name: 'methoddetails', params: { id: event.data.id } })\r\n                // this.$router.push({ name: 'networkmethod', params: { NetworkId: this.network.id, MethodId: this.method.id } })\r\n            }\r\n       }\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./MyMethods.vue?vue&type=template&id=5e432697\"\nimport script from \"./MyMethods.vue?vue&type=script&lang=js\"\nexport * from \"./MyMethods.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"methods\">\r\n        <h1>Methods Overview</h1>\r\n        <Button label=\"Method Wizard\" @click=\"goToMethodCreate\" />\r\n        <Toast position=\"top-right\"/>\r\n        <div class=\"card p-m-5 p-shadow-2\">\r\n            <my-methods :columns=\"columns\" selection-enabled></my-methods>\r\n        </div>\r\n    </div>\r\n    <!-- <Dialog v-model:visible=\"methodDialog\" :style=\"{width: '450px'}\" header=\"Method Details\" :modal=\"true\" class=\"p-fluid\">\r\n        <div class=\"p-field\">\r\n            <label for=\"name\">Name</label>\r\n            <InputText id=\"name\" v-model.trim=\"method.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !method.name}\"\r\n            @blur=\"updateMethodForm({ name: $event.target.value })\" />\r\n            <small class=\"p-error\" v-if=\"submitted && !method.name\">Name is required.</small>\r\n        </div>\r\n        <div class=\"p-field\">\r\n            <label for=\"description\">Description</label>\r\n            <Textarea id=\"description\" v-model=\"method.description\" required=\"true\" rows=\"3\" cols=\"20\"\r\n            @blur=\"updateMethodForm({ description: $event.target.value })\" />\r\n        </div>\r\n        <div class=\"p-field\">\r\n            <label for=\"ispublic\">Should this method be public? </label>\r\n            <SelectButton id=\"ispublic\" v-model=\"method.ispublic\" required=\"true\" :options=\"ispublicbool\"\r\n            @blur=\"updateMethodForm({ ispublic: $event.target.value })\" />\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"/>\r\n            <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveMethod\" :disabled=\"!method.name\" />\r\n        </template>\r\n    </Dialog> -->\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex'\r\nimport MyMethods from '../../components/MyMethods'\r\nexport default {\r\n    components: {\r\n        MyMethods\r\n    },\r\n    data () {\r\n        return {\r\n            columns: [\r\n                { field: 'ispublic', header: 'public' },\r\n                { field: 'name', header: 'Name' },\r\n                { field: 'description', header: 'Description' },\r\n                { field: 'surveys.length', header: 'Surveys' },\r\n                { field: 'networks.length', header: 'Networks' },\r\n                { field: 'organisations.length', header: 'Organisations' }\r\n                ]\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('method', ['method'])\r\n    },\r\n    methods: {\r\n        ...mapActions('method', ['createMethod']),\r\n        async goToMethodCreate () {\r\n            await this.createMethod({})\r\n            this.$router.push({ name: 'method-create', params: { id: this.method.id } })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./Methods.vue?vue&type=template&id=5afde745\"\nimport script from \"./Methods.vue?vue&type=script&lang=js\"\nexport * from \"./Methods.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}